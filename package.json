{
	"name": "puke-debug",
	"displayName": "Puke-Debug",
	"description": "Inserts simple, emetic debug lines where you need them. Last resort option in debugging...",
	"version": "0.3.0",
	"engines": {
		"vscode": "^1.33.1"
	},
	"license": "SEE LICENSE IN LICENSE",
	"publisher": "Zorvalt",
	"repository": "https://github.com/Zorvalt/Puke-Debug",
	"icon": "resources/puke-debug.png",
	"keywords": [
		"debug",
		"print",
		"log",
		"echo",
		"line",
		"sequence",
		"fun",
		"vomit",
		"puke"
	],
	"categories": [
		"Other"
	],
	"activationEvents": [
		"*"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "Puke-Debug",
			"properties": {
				"puke-debug.pukePointFormat": {
					"type": "string",
					"default": "\"PUKE: filename: %filename%, line: %line%\"",
					"description": "Puke-Point format. Use %line% and %filename% as placeholders for debug info."
				},
				"puke-debug.sequenceFormat": {
					"type": "string",
					"default": "\"PUKE: => %seq_number% <=\"",
					"description": "Sequence format. Use %seq_number% as a placeholder for the sequence number."
				},
				"puke-debug.defaultExposureFormat": {
					"type": "string",
					"default": "\"PUKE: %name% = \" + %name%",
					"description": "Default output format when no file type matches. Use %output% as a placeholder for the output."
				},
				"puke-debug.exposureFormats": {
					"type": "object",
					"default": {
						"shellscript": "\"%name% = ${%name%}\"",
						"c": "\"%name% = %s\", %name%",
						"cpp": "\"%name% = \" << %name%",
						"csharp": "\"%name% = \" + %name%",
						"go": "\"%name% = \", %name%",
						"java": "\"%name% = \" + %name%.toString()",
						"javascript": "\"%name% = \" + %name%",
						"makefile": "\"%name% = $%name%\"",
						"php": "\"%name% = \" . %name%",
						"python": "\"%name% = \" + str(%name%)",
						"rust": "\"%name% =  {:?}\", %name%",
						"scala": "\"%name% = \" + %name%.toString()",
						"typescript": "\"%name% = \" + %name%"
					},
					"description": "Format for variable exposure. Use %name% as placeholder for the variable name.\nA list of language tags is available here: https://code.visualstudio.com/docs/languages/identifiers"
				},
				"puke-debug.defaultOutputFormat": {
					"type": "string",
					"default": "print(%output%)",
					"description": "Default output format when no file type matches. Use %output% as a placeholder for the output."
				},
				"puke-debug.outputFormats": {
					"type": "object",
					"default": {
						"shellscript": "echo %output%",
						"c": "printf(%output%);",
						"cpp": "std::cout << %output% << std::endl;",
						"csharp": "Console.WriteLine(%output%);",
						"go": "fmt.Println(%output%)",
						"java": "System.out.println(%output%);",
						"javascript": "console.log(%output%);",
						"makefile": "echo %output%",
						"php": "echo %output%;",
						"python": "print(%output%)",
						"rust": "dbg!(%output%);",
						"scala": "println(%output%)",
						"typescript": "console.log(%output%);"
					},
					"description": "Output formats by language. Use %output% as a placeholder for the output\nA list of language tags is available here: https://code.visualstudio.com/docs/languages/identifiers"
				},
				"puke-debug.defaultCommentFormat": {
					"type": "string",
					"default": "//%comment%",
					"description": "Default comment format when no file type matches. Use %comment% as a placeholder for the comment"
				},
				"puke-debug.commentFormats": {
					"type": "object",
					"default": {
						"shellscript": "#%comment%",
						"c": "//%comment%",
						"cpp": "//%comment%",
						"csharp": "//%comment%",
						"go": "//%comment%",
						"java": "//%comment%",
						"javascript": "//%comment%",
						"makefile": "#%comment%",
						"php": "//%comment%",
						"python": "#%comment%",
						"rust": "//%comment%",
						"scala": "//%comment%",
						"typescript": "//%comment%;"
					},
					"description": "Comment formats by language. Use %comment% as a placeholder for the comment\nA list of language tags is available here: https://code.visualstudio.com/docs/languages/identifiers"
				},
				"puke-debug.commentTAG": {
					"type": "string",
					"default": "PKDBG",
					"description": "The comment tag to identify puke-points"
				},
				"puke-debug.updateOnSave": {
					"type": "boolean",
					"default": "true",
					"description": "Updates the Puke-Points on save"
				}
			}
		},
		"commands": [
			{
				"command": "pukeDebug.insertPukePoint",
				"title": "Insert puke-point"
			},
			{
				"command": "pukeDebug.clearPukePoints",
				"title": "Clears all puke-points in current file"
			},
			{
				"command": "pukeDebug.newSequence",
				"title": "Starts a new puke-sequence and inserts the first print"
			},
			{
				"command": "pukeDebug.nextSequence",
				"title": "Inserts next puke-sequence print"
			},
			{
				"command": "pukeDebug.clearSequence",
				"title": "Clears all puke-sequence prints"
			},
			{
				"command": "pukeDebug.insertExposure",
				"title": "Insert variable puke-exposure"
			},
			{
				"command": "pukeDebug.clearExposure",
				"title": "Clears all variable puke-exposure"
			},
			{
				"command": "pukeDebug.updatePukePoints",
				"title": "Updates all puke-objects in current file"
			},
			{
				"command": "pukeDebug.clearAll",
				"title": "Clears all puke-objects in current file"
			}
		],
		"keybindings": [
			{
				"command": "pukeDebug.insert",
				"key": "ctrl+alt+p",
				"mac": "ctrl+cmd+p",
				"when": "editorFocus"
			},
			{
				"command": "pukeDebug.insertPukePoint",
				"key": "ctrl+alt+shift+p p",
				"mac": "ctrl+cmd+shift+p p",
				"when": "editorFocus"
			},
			{
				"command": "pukeDebug.newSequence",
				"key": "ctrl+alt+shift+p s",
				"mac": "ctrl+cmd+shift+p s",
				"when": "editorFocus"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^5.2.6",
		"@types/node": "^10.17.34",
		"@types/vscode": "^1.49.0",
		"glob": "^7.1.6",
		"mocha": "^8.1.3",
		"tslint": "^5.20.1",
		"typescript": "^3.9.7",
		"vscode-test": "^1.4.0"
	},
	"dependencies": {
		"vsce": "^1.79.5"
	}
}
